{"version":3,"sources":["Card.js"],"names":["cc","Class","extends","Component","properties","card_pos","card_node","Node","pokerPrefab","default","type","Prefab","onLoad","_posx","Array","_posy","_rotation","ShowCurrentStatus","data","ShowCardNormal","index","self","removeAllChildren","active","setScale","gap","scale","i","pokerSprite","instantiate","addChild","pos","convertToNodeSpaceAR","p","setPosition","x","y","delay","delayTime","ac0","moveTo","runAction","sequence","ShowCardFinish","node","sprite","addComponent","Sprite","loader","loadRes","SpriteFrame","err","spriteFrame","ShowSelfCardFinish","moveBy","vv","audioMgr","playSFX","hideCard","ShowCardResult","cards","value","showType","list","getNiuList","getPositionX","poker","getComponent","Grobal","pokerSpriteFrameMap","name","uitools","ShowAniNui","ShowSeflCardResult","args","move1","move2","indexList","m","n","s","k","b","push","checkVlue","l"],"mappings":"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","file":"Card.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\comp","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        card_pos: '',\r\n        card_node: cc.Node,\r\n        pokerPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n    },\r\n\r\n    onLoad: function () {\r\n        this._posx = new Array(60,95,130,46,72,96,124,145,50,75,98,125,151);\r\n        this._posy = new Array(120,125,120,78,82,85,81,73,35,39,42,38,30);\r\n        this._rotation = new Array(-10,0,10,-25,-10,0,10,20,-25,-10,0,10,20);\r\n        \r\n        //this.ShowCardNormal()\r\n        //this.ShowSelfCardFinish();\r\n    },\r\n\r\n    ShowCurrentStatus:function(data){\r\n        // if( data.status != \"standup\"){  \r\n        //     this.ShowCardNormal();\r\n        // }\r\n        // if(data.xiazhuType == \"mingpai\"){\r\n        //     this.ShowCardSee()\r\n        // }\r\n        // if(data.status == \"ShowCardQipai\"){\r\n        //     this.ShowCardSee()\r\n        // }\r\n        // if(data.status == \"lose\"){\r\n        //     this.ShowCardLose()\r\n        // }\r\n    },\r\n\r\n    ShowCardNormal:function(index){\r\n        var self = this\r\n        self.card_node.removeAllChildren();\r\n        self.card_node.active = true;\r\n        self.card_node.setScale(1);\r\n        var gap = 20;\r\n        var scale = 0.32\r\n        //var scale = 0.28\r\n        if(index == 0){\r\n            gap = 20; \r\n            scale = 0.55; \r\n            //scale = 0.5; \r\n        }\r\n\r\n        for(var i = 0; i < 5; i++){\r\n            var pokerSprite = cc.instantiate(self.pokerPrefab);\r\n            pokerSprite.setScale(scale);\r\n            \r\n            self.card_node.addChild(pokerSprite);\r\n            if(i > 0){\r\n                //pokerSprite.runAction(cc.moveBy(0.5,cc.p(i*gap,0))) \r\n            }\r\n            var pos = self.card_node.convertToNodeSpaceAR(cc.p(320,600));\r\n            pokerSprite.setPosition( pos); \r\n            pokerSprite.setPosition(pos.x , pos.y); \r\n            //pokerSprite.setPosition( -2* gap , 5); \r\n            var delay = cc.delayTime(0.05 + 0.05 * i);\r\n            var ac0 = cc.moveTo(0.3,cc.p(-30 + i*gap ,-10));\r\n            pokerSprite.runAction(cc.sequence( delay,ac0 ));\r\n        }\r\n    },\r\n\r\n    ShowCardFinish:function(){\r\n        var node = new cc.Node();\r\n        var sprite = node.addComponent(cc.Sprite);\r\n        this.card_node.addChild(node)\r\n        cc.loader.loadRes(\"niuniu/arrange_complete.png\", cc.SpriteFrame, function (err, spriteFrame) {\r\n            sprite.spriteFrame = spriteFrame;\r\n        });\r\n    },\r\n\r\n    ShowSelfCardFinish:function(){\r\n        var self = this\r\n        self.card_node.removeAllChildren();\r\n        self.card_node.active = true;\r\n        \r\n        var gap = 75;\r\n        //var scale = 0.5\r\n        var scale = 0.45\r\n        for(var i = 0; i < 5; i++){\r\n            var pokerSprite = cc.instantiate(self.pokerPrefab);\r\n            pokerSprite.setScale(scale);\r\n            //pokerSprite.setPosition( -145 + i*gap, 35); \r\n            pokerSprite.setPosition( -145, 35); \r\n            self.card_node.addChild(pokerSprite);\r\n            if(i > 0){\r\n                pokerSprite.runAction(cc.moveBy(0.5,cc.p(i*gap,0))) \r\n            }\r\n        }\r\n        var node = new cc.Node();\r\n        var sprite = node.addComponent(cc.Sprite);\r\n        this.card_node.addChild(node)\r\n        cc.loader.loadRes(\"niuniu/arrange_complete.png\", cc.SpriteFrame, function (err, spriteFrame) {\r\n            sprite.spriteFrame = spriteFrame;\r\n        });\r\n        cc.vv.audioMgr.playSFX('effect/poker_deal.mp3');\r\n    },\r\n\r\n    hideCard:function(){\r\n        var self = this;\r\n        self.card_node.active = false;\r\n    },\r\n\r\n    ShowCardResult:function(cards,value,showType){\r\n        var self = this\r\n        self.card_node.removeAllChildren();\r\n        self.card_node.active = true;\r\n        var gap = 25;\r\n        //var scale = 0.4;\r\n        var scale = 0.45;\r\n        var list= null;\r\n        if(value > 0){\r\n            list = self.getNiuList(cards,value);\r\n        }\r\n        for(var i = 0; i < 5; i++){\r\n            var pokerSprite = cc.instantiate(self.pokerPrefab);\r\n            pokerSprite.setScale(scale);\r\n            if(i==3 ){\r\n                gap = 25;\r\n            }\r\n            if(self.card_node.getPositionX()<0){\r\n                if(list !== null){\r\n                    pokerSprite.setPosition(-39, 0); \r\n                }else{\r\n                    pokerSprite.setPosition(-24, 0);\r\n                }\r\n            }else{\r\n                pokerSprite.setPosition(-50, 0); \r\n            }\r\n            if(list !== null){\r\n                if(i>=3){\r\n                    pokerSprite.runAction(cc.moveBy(0.5,cc.p(i*gap+20,0))) \r\n                }else{\r\n                    if(i > 0){\r\n                        pokerSprite.runAction(cc.moveBy(0.5,cc.p(i*gap,0))) \r\n                    }\r\n                }\r\n            }else{\r\n                if(i > 0){\r\n                    pokerSprite.runAction(cc.moveBy(0.5,cc.p(i*gap,0))) \r\n                }\r\n            }\r\n            var poker = cards[i];\r\n            if(list !== null){\r\n                poker = cards[list[i]]\r\n            }\r\n            pokerSprite.getComponent(cc.Sprite).spriteFrame = Grobal.pokerSpriteFrameMap[poker.name];\r\n            self.card_node.addChild(pokerSprite);\r\n        }\r\n        self.card_node.setScale(0.65);\r\n        cc.vv.uitools.ShowAniNui(value,self.card_node);\r\n    },\r\n\r\n\r\n    ShowSeflCardResult:function(cards,value,showType){\r\n        var self = this\r\n        self.card_node.removeAllChildren();\r\n        self.card_node.active = true;\r\n        var gap = 85;\r\n        //var scale = 0.55;\r\n        var scale = 0.61;\r\n        var list= null\r\n        if(value > 0){\r\n            list = self.getNiuList(cards,value);\r\n        }\r\n\r\n\r\n        if(cc.args[\"ext_json\"]['playerNum']==6) {\r\n            var move1 = new Array(-2,48,98,148,198);\r\n        } else {\r\n            var move1 = new Array(-42,8,58,108,158);\r\n        }\r\n        var move2 = new Array(-42,8,58,178,228);\r\n        for(var i = 0; i < 5; i++){\r\n            var pokerSprite = cc.instantiate(self.pokerPrefab);\r\n            pokerSprite.setScale(scale);\r\n            var poker = cards[i];\r\n            if(list !== null){\r\n                poker = cards[list[i]]\r\n            }\r\n            // if(showType == \"1\"){\r\n            //     pokerSprite.setPosition(-110 + i*gap, 30);\r\n            //     pokerSprite.runAction(cc.moveBy (0.3,cc.p(movex[i],0)));\r\n            // }else{\r\n            //     pokerSprite.setPosition(move2[i], 30);\r\n            // }\r\n            pokerSprite.setPosition(-42 + i*gap, 38);\r\n            if(list !== null){\r\n                pokerSprite.runAction(cc.moveTo (0.3,cc.p(move2[i],38)));\r\n            }else{\r\n                pokerSprite.runAction(cc.moveTo (0.3,cc.p(move1[i],38)));\r\n            }\r\n            pokerSprite.getComponent(cc.Sprite).spriteFrame = Grobal.pokerSpriteFrameMap[poker.name];\r\n            self.card_node.addChild(pokerSprite);\r\n        }\r\n        self.card_node.setScale(0.85);\r\n        cc.vv.uitools.ShowAniNui(value,self.card_node,1);\r\n    },\r\n\r\n\r\n\r\n    getNiuList:function(cards,value){\r\n        var indexList = new Array();\r\n        var m = 0;\r\n        var n = 0;\r\n        var s = 0;\r\n        for(var i=0;i<3;i++){\r\n            for(var k=i+1;k<5;k++){\r\n                for(var b=k+1;b<5;b++){\r\n                    if( ( cards[i].value +  cards[k].value  + cards[b].value) % 10 == 0){\r\n                        m = i;\r\n                        n = k;\r\n                        s = b;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        indexList.push(m);\r\n        indexList.push(n);\r\n        indexList.push(s);\r\n        if(m==0 && n==0 && s==0){\r\n            return null;\r\n        }\r\n        var checkVlue = 0\r\n        for(var l=0;l<5;l++){\r\n            if(l !==m && l !== n && l !== s){\r\n                indexList.push(l);\r\n            }\r\n        }\r\n        return indexList\r\n    }\r\n});\r\n"]}